const notificationService = require("../services/notificationService");

/**
 * üìå API: L·∫•y danh s√°ch th√¥ng b√°o c·ªßa user
 */
exports.getNotifications = async (req, res) => {
  try {
    const userId = req.user._id;
    if (!userId) {
      return res.status(400).json({ error: "Thi·∫øu userId" });
    }

    const notifications = await notificationService.getUserNotifications(
      userId
    );
    res.status(200).json(notifications);
  } catch (error) {
    console.error("‚ùå L·ªói l·∫•y th√¥ng b√°o:", error);
    res.status(500).json({ error: "L·ªói h·ªá th·ªëng" });
  }
};

/**
 * üìå API: ƒê√°nh d·∫•u th√¥ng b√°o l√† ƒë√£ ƒë·ªçc
 */
exports.markAsRead = async (req, res) => {
  try {
    const { id } = req.params;
    if (!id) {
      return res.status(400).json({ error: "Thi·∫øu notificationId" });
    }

    const updatedNotification =
      await notificationService.markNotificationAsRead(id);
    if (!updatedNotification) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y th√¥ng b√°o" });
    }

    res.status(200).json({ message: "Th√¥ng b√°o ƒë√£ ƒë·ªçc" });
  } catch (error) {
    console.error("‚ùå L·ªói ƒë√°nh d·∫•u th√¥ng b√°o:", error);
    res.status(500).json({ error: "L·ªói h·ªá th·ªëng" });
  }
};

/**
 * üìå API: G·ª≠i th√¥ng b√°o khi admin th√™m s·∫£n ph·∫©m m·ªõi
 */
exports.notifyNewProduct = async (req, res) => {
  try {
    const { title } = req.body;
    if (!title) {
      return res.status(400).json({ error: "Thi·∫øu ti√™u ƒë·ªÅ s·∫£n ph·∫©m" });
    }

    await notificationService.notifyNewProduct(title);
    res.status(201).json({ message: "Th√¥ng b√°o ƒë√£ g·ª≠i" });
  } catch (error) {
    console.error("‚ùå L·ªói g·ª≠i th√¥ng b√°o s·∫£n ph·∫©m m·ªõi:", error);
    res.status(500).json({ error: "L·ªói h·ªá th·ªëng" });
  }
};

/**
 * üìå API: G·ª≠i th√¥ng b√°o khi admin t·∫°o ƒë∆°n h√†ng
 */
exports.notifyNewOrder = async (req, res) => {
  try {
    console.log("üì© D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", req.body); // Debug

    const { orderId, userId } = req.body;
    if (!orderId || !userId) {
      return res.status(400).json({ error: "Thi·∫øu orderId ho·∫∑c userId" });
    }

    await notificationService.notifyNewOrder(orderId, userId);
    res.status(201).json({ message: "Th√¥ng b√°o ƒë√£ g·ª≠i" });
  } catch (error) {
    console.error("‚ùå L·ªói g·ª≠i th√¥ng b√°o ƒë∆°n h√†ng:", error);
    res.status(500).json({ error: "L·ªói h·ªá th·ªëng" });
  }
};

/**
 * üìå API: G·ª≠i th√¥ng b√°o khi admin ch·ªânh s·ª≠a ƒë∆°n h√†ng
 */
exports.notifyOrderUpdate = async (req, res) => {
  try {
    const { orderId, userId } = req.body;
    if (!orderId || !userId) {
      return res.status(400).json({ error: "Thi·∫øu orderId ho·∫∑c userId" });
    }

    await notificationService.notifyOrderUpdate(orderId, userId);
    res.status(201).json({ message: "Th√¥ng b√°o ƒë√£ g·ª≠i" });
  } catch (error) {
    console.error("‚ùå L·ªói g·ª≠i th√¥ng b√°o c·∫≠p nh·∫≠t ƒë∆°n h√†ng:", error);
    res.status(500).json({ error: "L·ªói h·ªá th·ªëng" });
  }
};
